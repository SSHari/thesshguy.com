import type { V2_MetaFunction } from '@remix-run/node';
import { motion } from 'framer-motion';

export const meta: V2_MetaFunction = () => {
  return [{ title: 'Sai Hari' }];
};

export default function Index() {
  return (
    <main className="flex h-screen w-screen flex-col items-center py-16 md:justify-center">
      <div className="flex w-full max-w-screen-sm flex-col items-center gap-4 md:max-w-screen-md">
        <h1 className="w-80 md:w-96 lg:w-[30rem]">
          <motion.svg
            viewBox="-5 100 220 75"
            className="w-full"
            aria-labelledby="hero-card-svg-title"
          >
            <title id="hero-card-svg-title">Sai Hari</title>
            <g
              transform="matrix(0.26458333,0,0,0.26458333,-36.721026,13.30472)"
              className="stroke-[#0a192f] stroke-[6]"
            >
              {namePaths.map(({ letter, path }, index) => (
                <motion.path
                  key={`${letter}-${index}`}
                  variants={{
                    hidden: {
                      opacity: 0,
                      pathLength: 0,
                      fill: 'rgba(255, 255, 255, 0)',
                    },
                    visible: {
                      opacity: 1,
                      pathLength: 1,
                      fill: '#112240',
                    },
                  }}
                  initial="hidden"
                  animate="visible"
                  transition={{
                    delay: 0.25 * index,
                    default: { duration: 1.25, ease: 'easeInOut' },
                    opacity: { duration: 0.6, ease: [1, 0, 0.8, 1] },
                  }}
                  d={path}
                />
              ))}
            </g>
          </motion.svg>
        </h1>
        <motion.span
          className="text-center text-xl font-bold text-gray-600 lg:text-2xl"
          variants={{
            hidden: {
              opacity: 0,
              translateY: '20px',
            },
            visible: {
              opacity: 1,
              translateY: 0,
            },
          }}
          initial="hidden"
          animate="visible"
          transition={{
            delay: 1,
            default: { duration: 1.75, ease: 'easeInOut' },
            opacity: { duration: 1, ease: [1, 0, 0.8, 1] },
          }}
        >
          {[...tagLines].sort(() => 0.5 - Math.random())[0]}
        </motion.span>
      </div>
    </main>
  );
}

type NamePath = { letter: string; path: string };

const namePaths: Array<NamePath> = [
  {
    letter: 'S',
    path: 'm 255.79875,516.75387 15.552,-10.752 -1.152,-2.496 -15.744,10.368 c -8.064,5.376 -21.312,13.44 -36.48,22.08 0.192,-2.304 0.192,-4.608 0,-6.912 l -1.92,-32.448 c -2.88,-47.808 24.192,-58.752 43.2,-66.624 3.072,1.152 7.296,4.992 7.296,12.672 0,8.832 -5.184,18.624 -21.696,33.6 l 1.152,0.768 c 16.896,-4.032 34.752,-19.2 34.752,-32.64 0,-9.6 -11.136,-18.048 -22.272,-18.048 -24.768,5.568 -67.392,20.928 -64.512,76.608 l 1.536,29.568 c 0.384,6.144 -0.576,11.904 -2.496,17.088 -22.272,11.904 -44.928,23.04 -60.096,28.608 l -1.536,2.496 c 5.76,2.88 11.904,4.8 18.048,6.528 34.368,2.304 65.28,-13.44 68.352,-47.808 16.896,-9.6 31.296,-18.048 38.016,-22.656 z m -120,62.784 c 13.056,-4.032 34.176,-14.208 55.296,-25.344 -8.832,16.896 -29.568,26.304 -55.296,25.344 z',
  },
  {
    letter: 'a',
    path: 'm 335.28668,537.29787 c 9.984,0 19.392,-5.76 41.088,-20.544 l 15.744,-10.752 -1.344,-2.496 -15.936,10.368 c -17.856,11.52 -26.304,16.704 -32.448,17.28 0.96,-9.216 2.304,-21.888 9.792,-34.56 10.56,-14.208 15.936,-21.312 18.624,-29.76 -3.84,-4.608 -16.512,-3.84 -21.504,-1.152 -1.344,2.112 -2.496,4.224 -3.84,6.144 -1.344,-6.144 -6.528,-8.832 -11.52,-8.832 -8.832,0 -23.04,7.488 -34.176,19.776 -5.568,4.224 -12.864,9.408 -22.848,16.128 l -15.744,10.56 1.536,2.496 15.936,-10.752 c 5.952,-4.032 10.944,-7.488 14.976,-10.56 -6.528,9.408 -10.944,20.544 -10.944,33.024 0,6.912 3.648,10.944 8.448,10.944 8.064,0 20.16,-7.488 36.672,-29.184 -3.648,8.448 -5.184,14.784 -5.184,19.008 0,10.368 4.224,12.864 12.672,12.864 z m -30.528,-15.168 c -3.456,-10.752 5.376,-49.536 27.264,-56.064 6.72,0.576 10.176,4.608 10.176,9.408 0,0.768 -0.192,1.92 -0.576,3.072 -1.344,2.112 -2.496,4.416 -3.648,6.336 -10.368,15.168 -25.344,35.328 -33.216,37.248 z',
  },
  {
    letter: 'i',
    path: 'm 449.71837,453.96987 c 8.448,0 16.128,-8.64 16.128,-14.976 0,-5.568 -4.992,-10.368 -10.56,-10.368 -8.064,0 -15.744,7.872 -15.744,14.976 0,5.568 4.8,10.368 10.176,10.368 z m -2.496,27.072 c 0,-4.224 -3.264,-5.568 -7.488,-5.568 -8.64,0 -20.352,8.832 -42.24,23.424 l -15.744,10.56 1.536,2.496 15.936,-10.752 c 11.904,-8.064 19.392,-12.48 22.08,-13.44 -3.072,12.096 -21.888,40.896 -21.888,49.728 0,3.84 2.496,5.952 6.912,5.952 10.944,0 17.088,-4.032 49.92,-26.688 l 16.128,-11.136 -1.728,-2.112 -15.744,10.368 c -9.984,6.528 -25.536,16.704 -29.568,16.704 2.88,-11.328 21.888,-39.936 21.888,-49.536 z',
  },
  {
    letter: 'H',
    path: 'm 576.05403,533.64987 c 0,6.336 4.032,9.024 12.288,9.024 11.712,0 19.968,-5.184 50.304,-25.92 l 15.744,-10.752 -1.344,-2.496 -15.936,10.368 c -11.52,7.488 -30.72,17.856 -35.52,17.856 3.84,-15.744 13.248,-45.888 33.216,-77.952 l 28.608,-31.296 c 0,-9.024 -19.2,-10.176 -25.92,-7.296 -6.72,9.216 -19.776,28.416 -32.256,49.344 -13.248,7.296 -26.688,14.976 -39.552,22.464 5.568,-17.088 11.328,-36.864 17.088,-59.328 -0.768,-1.536 -2.688,-2.304 -4.416,-2.496 -17.088,0 -36.48,4.608 -61.056,14.208 -0.192,1.728 0.96,2.688 2.88,4.032 18.432,-8.448 37.44,-12.864 56.832,-14.592 -6.912,19.008 -19.584,46.08 -32.64,70.848 -25.92,15.744 -48.96,30.528 -64.704,42.048 0,12.48 9.024,28.608 26.88,28.608 21.696,0 39.36,-24.96 57.216,-77.376 13.248,-7.872 26.112,-15.552 38.016,-22.464 -13.824,23.808 -25.728,48.96 -25.728,63.168 z m -75.456,29.76 c -8.448,-3.072 -14.4,-11.712 -15.36,-20.544 13.056,-9.792 33.408,-22.848 55.488,-36.096 -16.704,30.912 -33.408,56.64 -40.128,56.64 z',
  },
  {
    letter: 'a',
    path: 'm 718.13385,537.29787 c 9.984,0 19.392,-5.76 41.088,-20.544 l 15.744,-10.752 -1.344,-2.496 -15.936,10.368 c -17.856,11.52 -26.304,16.704 -32.448,17.28 0.96,-9.216 2.304,-21.888 9.792,-34.56 10.56,-14.208 15.936,-21.312 18.624,-29.76 -3.84,-4.608 -16.512,-3.84 -21.504,-1.152 -1.344,2.112 -2.496,4.224 -3.84,6.144 -1.344,-6.144 -6.528,-8.832 -11.52,-8.832 -8.832,0 -23.04,7.488 -34.176,19.776 -5.568,4.224 -12.864,9.408 -22.848,16.128 l -15.744,10.56 1.536,2.496 15.936,-10.752 c 5.952,-4.032 10.944,-7.488 14.976,-10.56 -6.528,9.408 -10.944,20.544 -10.944,33.024 0,6.912 3.648,10.944 8.448,10.944 8.064,0 20.16,-7.488 36.672,-29.184 -3.648,8.448 -5.184,14.784 -5.184,19.008 0,10.368 4.224,12.864 12.672,12.864 z m -30.528,-15.168 c -3.456,-10.752 5.376,-49.536 27.264,-56.064 6.72,0.576 10.176,4.608 10.176,9.408 0,0.768 -0.192,1.92 -0.576,3.072 -1.344,2.112 -2.496,4.416 -3.648,6.336 -10.368,15.168 -25.344,35.328 -33.216,37.248 z',
  },
  {
    letter: 'r',
    path: 'm 784.18153,546.32187 c 9.408,0 27.072,-9.6 55.872,-29.568 l 16.128,-11.136 -1.536,-2.304 -16.32,10.752 c -15.36,10.176 -29.76,16.704 -34.752,18.048 5.568,-12.288 33.024,-34.752 33.024,-40.704 0,-6.336 -9.6,-6.912 -30.144,-10.56 2.496,-3.264 3.84,-6.528 3.84,-9.6 0,-3.84 -2.304,-7.104 -7.872,-7.104 -7.872,0 -13.056,6.336 -13.056,11.904 0,4.224 3.264,6.336 8.832,7.488 -3.072,3.84 -9.024,9.408 -17.856,15.36 l -15.744,10.56 1.536,2.496 15.936,-10.752 c 9.216,-6.144 16.512,-11.712 21.312,-16.896 6.144,1.152 8.64,2.112 10.176,2.88 0,8.448 -38.976,35.52 -38.976,50.688 0,5.952 3.456,8.448 9.6,8.448 z',
  },
  {
    letter: 'i',
    path: 'm 913.39744,453.96987 c 8.448,0 16.128,-8.64 16.128,-14.976 0,-5.568 -4.992,-10.368 -10.56,-10.368 -8.064,0 -15.744,7.872 -15.744,14.976 0,5.568 4.8,10.368 10.176,10.368 z m -2.496,27.072 c 0,-4.224 -3.264,-5.568 -7.488,-5.568 -8.64,0 -20.352,8.832 -42.24,23.424 l -15.744,10.56 1.536,2.496 15.936,-10.752 c 11.904,-8.064 19.392,-12.48 22.08,-13.44 -3.072,12.096 -21.888,40.896 -21.888,49.728 0,3.84 2.496,5.952 6.912,5.952 10.944,0 17.088,-4.032 49.92,-26.688 l 16.128,-11.136 -1.728,-2.112 -15.744,10.368 c -9.984,6.528 -25.536,16.704 -29.568,16.704 2.88,-11.328 21.888,-39.936 21.888,-49.536 z',
  },
];

const tagLines = ['Developer of Software', 'I think, therefore I program.'];
